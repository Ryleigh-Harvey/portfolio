# -*- coding: utf-8 -*-
"""synthetic dataset

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R2sWvQzwitDQXD65-9NoqPcPHPKO0WJ5
"""

import pandas as pd
import numpy as np
import random
from datetime import timedelta, datetime

#Parameters
n_sessions = 5000
user_ids = list(range(1, 401))
sports = ["Boxing", "Wrestling", "Bodybuilding", "Powerlifting", "Jiu-Jitsu"]
fitness_levels = ["Beginner", "Intermediate", "Advanced"]
goals = ["Strength", "Endurance", "Hypertrophy", "Technique Improvement"]
workout_types = {
    "Boxing": ["Shadowboxing", "Bag Work", "Sparring", "Conditioning"],
    "Wrestling": ["Takedown Drills", "Mat Work", "Conditioning"],
    "Bodybuilding": ["Bench Press", "Squat", "Deadlift", "Incline Dumbbell Press"],
    "Powerlifting": ["Squat", "Bench Press", "Deadlift", "Accessory Work"],
    "Jiu-Jitsu": ["Drills", "Rolling", "Flexibility Training"]
}
satisfaction_levels = [1, 2, 3, 4, 5]
fatigue_levels = [1, 2, 3, 4, 5]
soreness_status = [True, False]
start_date = datetime(2024, 1, 1)

#Generate synthetic data
data = []
for i in range(n_sessions):
    user_id = random.choice(user_ids)
    sport = random.choice(sports)
    fitness_level = random.choice(fitness_levels)
    goal = random.choice(goals)
    workout_type = random.choice(workout_types[sport])
    duration = random.randint(20, 120)  # minutes
    intensity = random.randint(1, 5)
    completed = random.choice([True, False])
    reps_or_time = random.randint(1, 500) if workout_type in ["Shadowboxing", "Bag Work"] else random.randint(5, 30)
    weight_lifted = random.randint(20, 150) if sport in ["Bodybuilding", "Powerlifting"] else None
    satisfaction = random.choice(satisfaction_levels)
    fatigue = random.choice(fatigue_levels)
    soreness = random.choice(soreness_status)
    date = start_date + timedelta(days=random.randint(0, 365))
    next_suggested_workout = random.choice(workout_types[sport])
    reward = satisfaction - fatigue  # Example reward formula
    # Additional fields
    heart_rate = random.randint(60, 180)  # Avg. heart rate in beats per minute
    calories_burned = duration * intensity * random.uniform(5, 10)  # Simple calories formula

    data.append([
        user_id, sport, fitness_level, goal, workout_type, duration, intensity, completed,
        reps_or_time, weight_lifted, satisfaction, fatigue, soreness, date, next_suggested_workout, reward, heart_rate, calories_burned
    ])

# Create DataFrame
columns = [
    "User_ID", "Sport", "Fitness_Level", "Goals", "Workout_Type", "Duration",
    "Intensity", "Completed", "Reps_Or_Time", "Weight_Lifted", "Satisfaction",
    "Fatigue", "Soreness", "Date", "Next_Suggested_Workout", "Reward", "Heart_Rate", "Calories_Burned"
]
df = pd.DataFrame(data, columns=columns)

# Save to CSV
df.to_csv("workout_data.csv", index=False)
print("Dataset saved as workout_data.csv")